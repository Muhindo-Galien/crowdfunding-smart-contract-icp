service: () -> {
    cancelProject: (principal) -> (variant {Ok:record {id:principal; startTime:nat64; status:text; title:text; creator:text; goalAmount:nat64; description:text; deadline:nat64; raisedAmount:nat64; contributors:vec text}; Err:variant {ProjectExpired:text; Fail:text; InvalidStatus:text; InvalidPayload:text; NotFound:text}});
    contributeToProject: (principal, record {amount:nat64; contributor:text}) -> (variant {Ok:record {id:principal; startTime:nat64; status:text; title:text; creator:text; goalAmount:nat64; description:text; deadline:nat64; raisedAmount:nat64; contributors:vec text}; Err:variant {ProjectExpired:text; Fail:text; InvalidStatus:text; InvalidPayload:text; NotFound:text}});
    createProject: (record {title:text; creator:text; duration:nat64; goalAmount:nat64; description:text}) -> (variant {Ok:record {id:principal; startTime:nat64; status:text; title:text; creator:text; goalAmount:nat64; description:text; deadline:nat64; raisedAmount:nat64; contributors:vec text}; Err:variant {ProjectExpired:text; Fail:text; InvalidStatus:text; InvalidPayload:text; NotFound:text}});
    getContributors: (principal) -> (variant {Ok:vec text; Err:variant {ProjectExpired:text; Fail:text; InvalidStatus:text; InvalidPayload:text; NotFound:text}}) query;
    getProject: (principal) -> (variant {Ok:record {id:principal; startTime:nat64; status:text; title:text; creator:text; goalAmount:nat64; description:text; deadline:nat64; raisedAmount:nat64; contributors:vec text}; Err:variant {ProjectExpired:text; Fail:text; InvalidStatus:text; InvalidPayload:text; NotFound:text}}) query;
    getProjects: (text) -> (variant {Ok:vec record {id:principal; startTime:nat64; status:text; title:text; creator:text; goalAmount:nat64; description:text; deadline:nat64; raisedAmount:nat64; contributors:vec text}; Err:variant {ProjectExpired:text; Fail:text; InvalidStatus:text; InvalidPayload:text; NotFound:text}}) query;
    updateProject: (principal, record {title:text; creator:text; duration:nat64; goalAmount:nat64; description:text}) -> (variant {Ok:record {id:principal; startTime:nat64; status:text; title:text; creator:text; goalAmount:nat64; description:text; deadline:nat64; raisedAmount:nat64; contributors:vec text}; Err:variant {ProjectExpired:text; Fail:text; InvalidStatus:text; InvalidPayload:text; NotFound:text}});
    updateStatus: (principal, text) -> (variant {Ok:record {id:principal; startTime:nat64; status:text; title:text; creator:text; goalAmount:nat64; description:text; deadline:nat64; raisedAmount:nat64; contributors:vec text}; Err:variant {ProjectExpired:text; Fail:text; InvalidStatus:text; InvalidPayload:text; NotFound:text}});
}
